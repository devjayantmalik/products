{"version":3,"sources":["components/Header.js","apis/index.js","history.js","actions/index.js","constants/actionTypes.js","components/ErrorCard.js","components/ProductItem.js","pages/products/Products.js","components/ProductHero.js","pages/products/ProductForm.js","pages/products/ProductCreate.js","pages/products/ProductUpdate.js","pages/products/ProductDelete.js","Router.js","reducers/errorReducer.js","reducers/index.js","reducers/productsReducer.js","index.js"],"names":["Header","useState","isOpen","setIsOpen","isActive","className","to","role","data-target","onClick","id","axios","create","baseURL","history","createHashHistory","fetchProduct","dispatch","api","get","then","res","type","payload","data","catch","err","ErrorCard","error","style","marginTop","ProductItem","product","title","description","price","renderProducts","products","map","key","connect","fetchProducts","useEffect","length","flexWrap","ProductHero","subtitle","ProductForm","renderTextInput","form","input","placeholder","meta","touched","onSubmit","this","props","handleSubmit","onFormSubmit","Field","name","component","submitTitle","React","Component","reduxForm","validate","errors","parseFloat","state","createProduct","post","push","match","params","parseInt","filter","updateProduct","patch","initialValues","deleteProduct","delete","Routers","exact","path","Products","ProductCreate","ProductUpdate","ProductDelete","INITIAL_STATE","combineReducers","action","formReducer","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","Router","document","querySelector"],"mappings":"4MA2CeA,EAvCA,WAAO,IAAD,EACWC,oBAAS,GADpB,mBACVC,EADU,KACFC,EADE,KAGXC,GAAsB,IAAXF,EAAkB,YAAc,GACjD,OACI,gCACI,yBAAKG,UAAU,uBACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAMA,UAAU,cAAcC,GAAG,KAAjC,QAIA,yBACIC,KAAK,SACLF,UAAS,+BAA0BD,GACnCI,cAAY,cACZC,QAAS,kBAAMN,GAAWD,KAE1B,+BACA,+BACA,iCAIR,yBAAKQ,GAAG,aAAaL,UAAS,sBAAiBD,IAC3C,wBAAIC,UAAU,cACV,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMC,GAAG,aAAT,aAEJ,wBAAID,UAAU,eACV,kBAAC,IAAD,CAAMC,GAAG,oBAAT,wB,eC7BbK,E,OAAAA,EAAMC,OAAO,CACxBC,QAJe,kD,OCEJC,EAFCC,cCaHC,EAAe,SAACN,GAAD,OAAQ,SAACO,GACjCC,EAAIC,IAAJ,oBAAqBT,IAChBU,MAAK,SAACC,GACHJ,EAAS,CAAEK,KCfM,gBDeqBC,QAASF,EAAIG,UAEtDC,OAAM,SAACC,GACJT,EAAS,CAAEK,KCjBY,sBDiBqBC,QAASG,SEXlDC,EARG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OACI,yBAAKvB,UAAU,YAAYwB,MAAO,CAAEC,UAAW,SAC3C,uBAAGzB,UAAU,0BAA0BuB,KC4BpCG,EA9BK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACI,6BAAS3B,UAAU,mCACf,4BAAQA,UAAU,eACd,wBAAIA,UAAU,qBAAqB2B,EAAQC,QAE/C,yBAAK5B,UAAU,gBACX,uBAAGA,UAAU,WAAW2B,EAAQE,aAChC,uBAAG7B,UAAU,WAAb,SACU,uCAAa2B,EAAQG,SAGnC,4BAAQ9B,UAAU,eACd,kBAAC,IAAD,CACIC,GAAE,oBAAe0B,EAAQtB,IACzBL,UAAU,oBAFd,QAMA,kBAAC,IAAD,CACIC,GAAE,2BAAsB0B,EAAQtB,IAChCL,UAAU,oBAFd,aCEV+B,EAAiB,SAACC,GACpB,OAAOA,EAASC,KAAI,SAACN,GAAD,OAChB,yBAAK3B,UAAU,cAAckC,IAAKP,EAAQtB,IACtC,kBAAC,EAAD,CAAasB,QAASA,SASnBQ,eAJS,SAAC,GACrB,MAAO,CAAEH,SAD6B,EAAfA,YAIa,CAAEI,cJ/Bb,kBAAM,SAACxB,GAChCC,EAAIC,IAAI,aACHC,MAAK,SAACC,GACHJ,EAAS,CAAEK,KCRO,iBDQqBC,QAASF,EAAIG,UAEvDC,OAAM,SAACC,GACJT,EAAS,CAAEK,KCVa,uBDUqBC,QAASG,UIyBnDc,EA9BE,SAAC,GAAwC,IAAtCZ,EAAqC,EAArCA,MAAOS,EAA8B,EAA9BA,SAAUI,EAAoB,EAApBA,cAKjC,OAJAC,qBAAU,WACND,MACD,IAECb,GAAmB,OAAVA,EAAuB,kBAAC,EAAD,CAAWA,MAAOA,IAElDS,EAASM,OAAS,EAAU,kBAAC,EAAD,CAAWf,MAAM,oBAG7C,0BAAMvB,UAAU,aACZ,6BAASA,UAAU,UAAUwB,MAAO,CAAEe,SAAU,SAC3CR,EAAeC,QCLjBQ,EAXK,SAAC,GAAyB,IAAvBZ,EAAsB,EAAtBA,MAAOa,EAAe,EAAfA,SAC1B,OACI,6BAASzC,UAAU,kCACf,yBAAKA,UAAU,+BACX,wBAAIA,UAAU,SAAS4B,GACvB,wBAAI5B,UAAU,YAAYyC,M,sDCJpCC,E,4MACFC,gBAAkB,SAACC,GAAU,IACjBC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAC5B,OACI,6BACI,yCACI/C,UAAS,uEACL+C,EAAKxB,OAASwB,EAAKC,QAAU,YAAc,eAE3CH,EAJR,CAKIC,YAAaA,KAEjB,uBAAG9C,UAAU,mBACR+C,EAAKxB,OAASwB,EAAKC,QAAUD,EAAKxB,MAAQ,Q,uDAOvD,OACI,0BACIvB,UAAU,gCACViD,SAAUC,KAAKC,MAAMC,aAAaF,KAAKC,MAAME,eAE7C,yBAAKrD,UAAU,uBACX,2BAAOA,UAAU,SAAjB,iBACA,kBAACsD,EAAA,EAAD,CACIC,KAAK,QACLC,UAAWN,KAAKP,gBAChBG,YAAY,yBAGpB,yBAAK9C,UAAU,uBACX,2BAAOA,UAAU,SAAjB,iBACA,kBAACsD,EAAA,EAAD,CACIC,KAAK,QACLC,UAAWN,KAAKP,gBAChBG,YAAY,yBAIpB,yBAAK9C,UAAU,uBACX,2BAAOA,UAAU,SAAjB,uBACA,kBAACsD,EAAA,EAAD,CACIC,KAAK,cACLC,UAAWN,KAAKP,gBAChBG,YAAY,+BAGpB,4BAAQ9C,UAAU,kCACbkD,KAAKC,MAAMM,aAAe,e,GAnDrBC,IAAMC,WA+EjBC,cAAU,CACrBhB,KAAM,gBACNiB,SAvBa,SAAC,GAAmC,IAAjCjC,EAAgC,EAAhCA,MAAOE,EAAyB,EAAzBA,MAAOD,EAAkB,EAAlBA,YACxBiC,EAAS,GAiBf,QAfKlC,GAASA,EAAMU,OAAS,KACzBwB,EAAOlC,MAAQ,0CAEdE,GAAUiC,WAAWjC,KACtBgC,EAAOhC,MAAQ,sCAEfA,IAAUiC,WAAWjC,GAAS,IAC9BgC,EAAOhC,MAAQ,+BAEdD,GAAeA,EAAYS,OAAS,KACrCwB,EAAOjC,YAAc,iDAErBA,GAAeA,EAAYS,OAAS,MACpCwB,EAAOjC,YAAc,mDAElBiC,IAGIF,CAGZlB,GCxDYP,eAJS,SAAC6B,GACrB,MAAO,CAAEzC,MAAOyC,EAAMF,OAAOG,iBAGO,CAAEA,cPJb,SAACtC,GAAD,OAAa,SAACf,GACvCC,EAAIqD,KAAK,YAAavC,GACjBZ,MAAK,SAACC,GACHJ,EAAS,CAAEK,KCtBO,iBDsBqBC,QAASF,EAAIG,OACpDV,EAAQ0D,KAAK,gBAEhB/C,OAAM,SAACC,GACJT,EAAS,CAAEK,KCzBa,uBDyBqBC,QAASG,UOHnDc,EArBO,SAACgB,GACnB,OAAIA,EAAM5B,MAAc,kBAAC,EAAD,CAAWA,MAAO4B,EAAM5B,QAG5C,0BAAMvB,UAAU,wBACZ,kBAAC,EAAD,CACI4B,MAAM,qBACNa,SAAS,oCAEb,kBAAC,EAAD,CACIY,aAAc,SAAC1B,GAAD,OAAawB,EAAMc,cAActC,IAC/C8B,YAAY,uBCmCbtB,eAnBS,SAAC,EAAD,GAAsC,IAAnC2B,EAAkC,EAAlCA,OAAQ9B,EAA0B,EAA1BA,SACvB3B,EADiD,EAAZ+D,MACxBC,OAAbhE,GACR,IAAKiE,SAASjE,GACV,MAAO,CACHkB,MACI,+DAGZ,IAAMI,EAAUK,EAASuC,QACrB,SAAC5C,GAAD,OAAaA,EAAQtB,KAAOiE,SAASjE,MACvC,GAEF,OAAKsB,EAEDmC,EAAOU,cAAsB,CAAEjD,MAAOuC,EAAOU,eAE1C,CAAE7C,QAASA,GAJG,CAAEJ,MAAO,wCAOM,CAAEiD,cRlBb,SAACnE,EAAIsB,GAAL,OAAiB,SAACf,GAC3CC,EAAI4D,MAAJ,oBAAuBpE,GAAMsB,GACxBZ,MAAK,SAACC,GACHJ,EAAS,CAAEK,KC9BO,iBD8BqBC,QAASF,EAAIG,OACpDV,EAAQ0D,KAAK,gBAEhB/C,OAAM,SAACC,GACJT,EAAS,CAAEK,KCjCa,uBDiCqBC,QAASG,SQWTV,gBAA1CwB,EA9CO,SAACgB,GAKnB,OAJAd,qBAAU,WACNc,EAAMxC,aAAawC,EAAMiB,MAAMC,OAAOhE,MACvC,IAEC8C,EAAM5B,MAAc,kBAAC,EAAD,CAAWA,MAAO4B,EAAM5B,QAG5C,0BAAMvB,UAAU,wBACZ,kBAAC,EAAD,CACI4B,MAAM,iBACNa,SAAS,oCAEb,kBAAC,EAAD,CACIiC,cAAevB,EAAMxB,QACrB0B,aAAc,SAAC1B,GAAD,OACVwB,EAAMqB,cACFF,SAASnB,EAAMiB,MAAMC,OAAOhE,IAC5BsB,IAGR8B,YAAY,uBC0BbtB,eApBS,SAAC6B,EAAD,GAAuB,IACnC3D,EADkC,EAAZ+D,MACTC,OAAbhE,GACR,IAAKiE,SAASjE,GACV,MAAO,CACHkB,MACI,+DAGZ,IAAMI,EAAUqC,EAAMhC,SAASuC,QAC3B,SAAC5C,GAAD,OAAaA,EAAQtB,KAAOiE,SAASjE,MACvC,GAEF,OAAKsB,EAEDqC,EAAMF,OAAOa,cACN,CAAEpD,MAAOyC,EAAMF,OAAOa,eAE1B,CAAEhD,QAASA,GALG,CAAEJ,MAAO,wCAQM,CAAEoD,cTRb,SAACtE,EAAIsB,GAAL,OAAiB,SAACf,GAC3CC,EAAI+D,OAAJ,oBAAwBvE,GAAMsB,GACzBZ,MAAK,WACFH,EAAS,CAAEK,KCtCO,iBDsCqBC,QAASb,IAChDI,EAAQ0D,KAAK,gBAEhB/C,OAAM,SAACC,GACJT,EAAS,CAAEK,KCzCa,uBDyCqBC,QAASG,SSCTV,gBAA1CwB,EA/CO,SAACgB,GAKnB,OAJAd,qBAAU,WACNc,EAAMxC,aAAawC,EAAMiB,MAAMC,OAAOhE,MACvC,IAEC8C,EAAM5B,MAAc,kBAAC,EAAD,CAAWA,MAAO4B,EAAM5B,QAG5C,0BAAMvB,UAAU,wBACZ,kBAAC,EAAD,CACI4B,MAAM,iBACNa,SAAS,oCAEb,kBAAC,EAAD,CACIiC,cAAevB,EAAMxB,QACrB0B,aAAc,SAAC1B,GAAD,OACVwB,EAAMwB,cACFL,SAASnB,EAAMiB,MAAMC,OAAOhE,IAC5BsB,IAGR8B,YAAY,uBCMboB,EAxBC,WACZ,OACI,kBAAC,IAAD,CAAQpE,QAASA,GACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,IAAIvB,UAAWwB,IACjC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYvB,UAAWwB,IAEzC,kBAAC,IAAD,CACIF,OAAK,EACLC,KAAK,mBACLvB,UAAWyB,IAEf,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,gBAAgBvB,UAAW0B,IAC7C,kBAAC,IAAD,CACIJ,OAAK,EACLC,KAAK,uBACLvB,UAAW2B,O,yCC1BzBC,EAAgB,CAClBhD,cAAe,KACfzB,aAAc,KACdsD,cAAe,KACfU,cAAe,MCDJU,cAAgB,CAC3BrD,SCJW,WAAyB,IAAxBgC,EAAuB,uDAAf,GAAIsB,EAAW,uCACnC,OAAQA,EAAOrE,MACX,IZJsB,iBYKlB,OAAOqE,EAAOpE,QAClB,IZHqB,gBYKrB,IZFsB,iBYGlB,MAAM,GAAN,mBAAW8C,GAAX,CAAkBsB,EAAOpE,UAC7B,IZEsB,iBYDlB,OAAO8C,EAAMO,QAAO,SAAC5C,GAAD,OAAaA,EAAQtB,KAAOiF,EAAOpE,WAC3D,QACI,OAAO8C,IDNfpB,KAAM2C,IACNzB,ODCW,WAAoC,IAAnCE,EAAkC,uDAA1BoB,EAAeE,EAAW,uCAC9C,OAAQA,EAAOrE,MACX,IVV4B,uBUWxB,OAAO,eAAK+C,EAAZ,CAAmB5B,cAAekD,EAAOpE,UAC7C,IVT2B,sBUUvB,OAAO,eAAK8C,EAAZ,CAAmBrD,aAAc2E,EAAOpE,UAC5C,IVR4B,uBUSxB,OAAO,eAAK8C,EAAZ,CAAmBC,cAAeqB,EAAOpE,UAC7C,IVJ4B,uBUKxB,OAAO,eAAK8C,EAAZ,CAAmBW,cAAeW,EAAOpE,UAC7C,QACI,OAAO8C,MGVbwB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAACO,EAAD,OAEJC,SAASC,cAAc,Y","file":"static/js/main.88206b37.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const isActive = isOpen === true ? \"is-active\" : \"\";\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar is-secondary\">\r\n                <div className=\"navbar-brand\">\r\n                    <Link className=\"navbar-item\" to=\"/\">\r\n                        Shop\r\n                    </Link>\r\n\r\n                    <div\r\n                        role=\"button\"\r\n                        className={`navbar-burger burger ${isActive}`}\r\n                        data-target=\"#primaryNav\"\r\n                        onClick={() => setIsOpen(!isOpen)}\r\n                    >\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"primaryNav\" className={`navbar-menu ${isActive}`}>\r\n                    <ul className=\"navbar-end\">\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/products\">Products</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/products/create\">Create Product</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst production = \"https://fake-json-products-data.herokuapp.com\";\r\nconst developement = \"http://localhost:3000\";\r\n\r\nexport default axios.create({\r\n    baseURL: process.env.NODE_ENV === \"development\" ? developement : production,\r\n});\r\n","import { createHashHistory } from \"history\";\r\n\r\nconst history = createHashHistory();\r\n\r\nexport default history;\r\n","import * as types from \"../constants/actionTypes\";\r\nimport api from \"../apis\";\r\n\r\nimport history from \"../history\";\r\n\r\nexport const fetchProducts = () => (dispatch) => {\r\n    api.get(\"/products\")\r\n        .then((res) => {\r\n            dispatch({ type: types.FETCH_PRODUCTS, payload: res.data });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: types.FETCH_PRODUCTS_ERROR, payload: err });\r\n        });\r\n};\r\n\r\nexport const fetchProduct = (id) => (dispatch) => {\r\n    api.get(`/products/${id}`)\r\n        .then((res) => {\r\n            dispatch({ type: types.FETCH_PRODUCT, payload: res.data });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: types.FETCH_PRODUCT_ERROR, payload: err });\r\n        });\r\n};\r\n\r\nexport const createProduct = (product) => (dispatch) => {\r\n    api.post(\"/products\", product)\r\n        .then((res) => {\r\n            dispatch({ type: types.CREATE_PRODUCT, payload: res.data });\r\n            history.push(\"/products\");\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: types.CREATE_PRODUCT_ERROR, payload: err });\r\n        });\r\n};\r\n\r\nexport const updateProduct = (id, product) => (dispatch) => {\r\n    api.patch(`/products/${id}`, product)\r\n        .then((res) => {\r\n            dispatch({ type: types.UPDATE_PRODUCT, payload: res.data });\r\n            history.push(\"/products\");\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: types.UPDATE_PRODUCT_ERROR, payload: err });\r\n        });\r\n};\r\n\r\nexport const deleteProduct = (id, product) => (dispatch) => {\r\n    api.delete(`/products/${id}`, product)\r\n        .then(() => {\r\n            dispatch({ type: types.DELETE_PRODUCT, payload: id });\r\n            history.push(\"/products\");\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: types.DELETE_PRODUCT_ERROR, payload: err });\r\n        });\r\n};\r\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FETCH_PRODUCTS_ERROR = \"FETCH_PRODUCTS_ERROR\";\r\n\r\nexport const FETCH_PRODUCT = \"FETCH_PRODUCT\";\r\nexport const FETCH_PRODUCT_ERROR = \"FETCH_PRODUCT_ERROR\";\r\n\r\nexport const CREATE_PRODUCT = \"CREATE_PRODUCT\";\r\nexport const CREATE_PRODUCT_ERROR = \"CREATE_PRODUCT_ERROR\";\r\n\r\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\r\nexport const UPDATE_PRODUCT_ERROR = \"UPDATE_PRODUCT_ERROR\";\r\n\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\nexport const DELETE_PRODUCT_ERROR = \"DELETE_PRODUCT_ERROR\";\r\n","import React from \"react\";\r\n\r\nconst ErrorCard = ({ error }) => {\r\n    return (\r\n        <div className=\"container\" style={{ marginTop: \"30px\" }}>\r\n            <p className=\"notification is-danger\">{error}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductItem = ({ product }) => {\r\n    return (\r\n        <article className=\"card product-card margin-top-30\">\r\n            <header className=\"card-header\">\r\n                <h2 className=\"card-header-title\">{product.title}</h2>\r\n            </header>\r\n            <div className=\"card-content\">\r\n                <p className=\"content\">{product.description}</p>\r\n                <p className=\"content\">\r\n                    Price <strong>Rs. {product.price}</strong>\r\n                </p>\r\n            </div>\r\n            <footer className=\"card-footer\">\r\n                <Link\r\n                    to={`/products/${product.id}`}\r\n                    className=\"card-footer-item\"\r\n                >\r\n                    Edit\r\n                </Link>\r\n                <Link\r\n                    to={`/products/delete/${product.id}`}\r\n                    className=\"card-footer-item\"\r\n                >\r\n                    Delete\r\n                </Link>\r\n            </footer>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProducts } from \"../../actions\";\r\nimport ErrorCard from \"../../components/ErrorCard\";\r\nimport ProductItem from \"../../components/ProductItem\";\r\n\r\nconst Products = ({ error, products, fetchProducts }) => {\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    if (error && error !== null) return <ErrorCard error={error} />;\r\n\r\n    if (products.length < 1) return <ErrorCard error=\"No items found.\" />;\r\n\r\n    return (\r\n        <main className=\"container\">\r\n            <section className=\"columns\" style={{ flexWrap: \"wrap\" }}>\r\n                {renderProducts(products)}\r\n            </section>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst renderProducts = (products) => {\r\n    return products.map((product) => (\r\n        <div className=\"column is-4\" key={product.id}>\r\n            <ProductItem product={product} />\r\n        </div>\r\n    ));\r\n};\r\n\r\nconst mapStateToProps = ({ products }) => {\r\n    return { products };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchProducts })(Products);\r\n","import React from \"react\";\r\n\r\nconst ProductHero = ({ title, subtitle }) => {\r\n    return (\r\n        <section className=\"hero is-medium is-dark is-bold\">\r\n            <div className=\"hero-body has-text-centered\">\r\n                <h1 className=\"title\">{title}</h1>\r\n                <h2 className=\"subtitle\">{subtitle}</h2>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ProductHero;\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\n\r\nclass ProductForm extends React.Component {\r\n    renderTextInput = (form) => {\r\n        const { input, placeholder, meta } = form;\r\n        return (\r\n            <div>\r\n                <input\r\n                    className={`input has-text-dark has-background-white is-family-monospace ${\r\n                        meta.error && meta.touched ? \"is-danger\" : \"is-primary\"\r\n                    }`}\r\n                    {...input}\r\n                    placeholder={placeholder}\r\n                />\r\n                <p className=\"has-text-danger\">\r\n                    {meta.error && meta.touched ? meta.error : null}\r\n                </p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"container product-create-form\"\r\n                onSubmit={this.props.handleSubmit(this.props.onFormSubmit)}\r\n            >\r\n                <div className=\"field margin-top-30\">\r\n                    <label className=\"label\">Product Title</label>\r\n                    <Field\r\n                        name=\"title\"\r\n                        component={this.renderTextInput}\r\n                        placeholder=\"Enter Product Title\"\r\n                    />\r\n                </div>\r\n                <div className=\"field margin-top-30\">\r\n                    <label className=\"label\">Product Price</label>\r\n                    <Field\r\n                        name=\"price\"\r\n                        component={this.renderTextInput}\r\n                        placeholder=\"Enter Product Price\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"field margin-top-30\">\r\n                    <label className=\"label\">Product Description</label>\r\n                    <Field\r\n                        name=\"description\"\r\n                        component={this.renderTextInput}\r\n                        placeholder=\"Enter Product Description\"\r\n                    />\r\n                </div>\r\n                <button className=\"button is-primary is-fullwidth\">\r\n                    {this.props.submitTitle || \"Submit\"}\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst validate = ({ title, price, description }) => {\r\n    const errors = {};\r\n\r\n    if (!title || title.length < 5)\r\n        errors.title = \"Title should be more than 5 characters\";\r\n\r\n    if (!price || !parseFloat(price))\r\n        errors.price = \"Price should be a numerical value.\";\r\n\r\n    if (price && !parseFloat(price) < 0)\r\n        errors.price = \"Price cannot be negative.\";\r\n\r\n    if (!description || description.length < 5)\r\n        errors.description = \"Description should be more than 5 characters.\";\r\n\r\n    if (description && description.length > 300)\r\n        errors.description = \"Description should be less than 300 characters.\";\r\n\r\n    return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"productCreate\",\r\n    validate: validate,\r\n})(ProductForm);\r\n","import React from \"react\";\r\n\r\nimport ProductHero from \"../../components/ProductHero\";\r\nimport { connect } from \"react-redux\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport ErrorCard from \"../../components/ErrorCard\";\r\nimport { createProduct } from \"../../actions\";\r\n\r\nconst ProductCreate = (props) => {\r\n    if (props.error) return <ErrorCard error={props.error} />;\r\n\r\n    return (\r\n        <main className=\"has-background-light\">\r\n            <ProductHero\r\n                title=\"Create new Product\"\r\n                subtitle=\"This works with great accuracy.\"\r\n            />\r\n            <ProductForm\r\n                onFormSubmit={(product) => props.createProduct(product)}\r\n                submitTitle=\"Create Product\"\r\n            />\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { error: state.errors.createProduct };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createProduct })(ProductCreate);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport ProductHero from \"../../components/ProductHero\";\r\nimport { connect } from \"react-redux\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport ErrorCard from \"../../components/ErrorCard\";\r\nimport { fetchProduct, updateProduct } from \"../../actions\";\r\n\r\nconst ProductUpdate = (props) => {\r\n    useEffect(() => {\r\n        props.fetchProduct(props.match.params.id);\r\n    }, []);\r\n\r\n    if (props.error) return <ErrorCard error={props.error} />;\r\n\r\n    return (\r\n        <main className=\"has-background-light\">\r\n            <ProductHero\r\n                title=\"Update Product\"\r\n                subtitle=\"This works with great accuracy.\"\r\n            />\r\n            <ProductForm\r\n                initialValues={props.product}\r\n                onFormSubmit={(product) =>\r\n                    props.updateProduct(\r\n                        parseInt(props.match.params.id),\r\n                        product\r\n                    )\r\n                }\r\n                submitTitle=\"Update Product\"\r\n            />\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ errors, products }, { match }) => {\r\n    const { id } = match.params;\r\n    if (!parseInt(id))\r\n        return {\r\n            error:\r\n                \"Invalid Product Id Provided. Product Id must be an integer.\",\r\n        };\r\n\r\n    const product = products.filter(\r\n        (product) => product.id === parseInt(id)\r\n    )[0];\r\n\r\n    if (!product) return { error: \"No product found with provided id.\" };\r\n\r\n    if (errors.updateProduct) return { error: errors.updateProduct };\r\n\r\n    return { product: product };\r\n};\r\n\r\nexport default connect(mapStateToProps, { updateProduct, fetchProduct })(\r\n    ProductUpdate\r\n);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport ProductHero from \"../../components/ProductHero\";\r\nimport { connect } from \"react-redux\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport ErrorCard from \"../../components/ErrorCard\";\r\nimport { fetchProduct, deleteProduct } from \"../../actions\";\r\n\r\nconst ProductDelete = (props) => {\r\n    useEffect(() => {\r\n        props.fetchProduct(props.match.params.id);\r\n    }, []);\r\n\r\n    if (props.error) return <ErrorCard error={props.error} />;\r\n\r\n    return (\r\n        <main className=\"has-background-light\">\r\n            <ProductHero\r\n                title=\"Delete Product\"\r\n                subtitle=\"This works with great accuracy.\"\r\n            />\r\n            <ProductForm\r\n                initialValues={props.product}\r\n                onFormSubmit={(product) =>\r\n                    props.deleteProduct(\r\n                        parseInt(props.match.params.id),\r\n                        product\r\n                    )\r\n                }\r\n                submitTitle=\"Delete Product\"\r\n            />\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, { match }) => {\r\n    const { id } = match.params;\r\n    if (!parseInt(id))\r\n        return {\r\n            error:\r\n                \"Invalid Product Id Provided. Product Id must be an integer.\",\r\n        };\r\n\r\n    const product = state.products.filter(\r\n        (product) => product.id === parseInt(id)\r\n    )[0];\r\n\r\n    if (!product) return { error: \"No product found with provided id.\" };\r\n\r\n    if (state.errors.deleteProduct)\r\n        return { error: state.errors.deleteProduct };\r\n\r\n    return { product: product };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteProduct, fetchProduct })(\r\n    ProductDelete\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Switch, Route, Router } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport Products from \"./pages/products/Products\";\r\nimport ProductCreate from \"./pages/products/ProductCreate\";\r\nimport history from \"./history\";\r\nimport ProductUpdate from \"./pages/products/ProductUpdate\";\r\nimport ProductDelete from \"./pages/products/ProductDelete\";\r\n\r\nconst Routers = () => {\r\n    return (\r\n        <Router history={history}>\r\n            <Header />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Products} />\r\n                <Route exact path=\"/products\" component={Products} />\r\n\r\n                <Route\r\n                    exact\r\n                    path=\"/products/create\"\r\n                    component={ProductCreate}\r\n                />\r\n                <Route exact path=\"/products/:id\" component={ProductUpdate} />\r\n                <Route\r\n                    exact\r\n                    path=\"/products/delete/:id\"\r\n                    component={ProductDelete}\r\n                />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Routers;\r\n","import * as types from \"../constants/actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n    fetchProducts: null,\r\n    fetchProduct: null,\r\n    createProduct: null,\r\n    deleteProduct: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCTS_ERROR:\r\n            return { ...state, fetchProducts: action.payload };\r\n        case types.FETCH_PRODUCT_ERROR:\r\n            return { ...state, fetchProduct: action.payload };\r\n        case types.CREATE_PRODUCT_ERROR:\r\n            return { ...state, createProduct: action.payload };\r\n        case types.DELETE_PRODUCT_ERROR:\r\n            return { ...state, deleteProduct: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport productsReducer from \"./productsReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n    products: productsReducer,\r\n    form: formReducer,\r\n    errors: errorReducer,\r\n});\r\n","import * as types from \"../constants/actionTypes\";\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_PRODUCTS:\r\n            return action.payload;\r\n        case types.FETCH_PRODUCT:\r\n            return [...state, action.payload];\r\n        case types.CREATE_PRODUCT:\r\n            return [...state, action.payload];\r\n        case types.DELETE_PRODUCT:\r\n            return state.filter((product) => product.id !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Router from \"./Router\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}