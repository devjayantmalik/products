{"version":3,"sources":["components/Header.js","apis/index.js","history.js","actions/index.js","constants/actionTypes.js","components/ErrorCard.js","components/ProductItem.js","components/Loader.js","pages/products/Products.js","components/ProductHero.js","pages/products/ProductForm.js","pages/products/ProductCreate.js","pages/products/ProductUpdate.js","pages/products/ProductDelete.js","Router.js","reducers/errorReducer.js","reducers/index.js","reducers/productsReducer.js","index.js"],"names":["Header","useState","isOpen","setIsOpen","isActive","className","to","role","data-target","onClick","id","axios","create","baseURL","history","createHashHistory","fetchProduct","dispatch","api","get","then","res","type","payload","data","catch","err","ErrorCard","error","style","marginTop","ProductItem","product","title","description","price","Loader","max","LOADING","renderProducts","products","map","key","connect","fetchProducts","useEffect","length","flexWrap","ProductHero","subtitle","ProductForm","renderTextInput","form","input","placeholder","meta","touched","onSubmit","this","props","handleSubmit","onFormSubmit","Field","name","component","submitTitle","React","Component","reduxForm","validate","errors","parseFloat","state","createProduct","post","push","match","params","parseInt","filter","updateProduct","patch","initialValues","deleteProduct","delete","Routers","exact","path","Products","ProductCreate","ProductUpdate","ProductDelete","INITIAL_STATE","combineReducers","action","formReducer","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","Router","document","querySelector"],"mappings":"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","file":"static/js/main.4dd2fe49.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const isActive = isOpen === true ? \"is-active\" : \"\";\n    return (\n        <header>\n            <nav className=\"navbar is-secondary\">\n                <div className=\"navbar-brand\">\n                    <Link className=\"navbar-item\" to=\"/\">\n                        Shop\n                    </Link>\n\n                    <div\n                        role=\"button\"\n                        className={`navbar-burger burger ${isActive}`}\n                        data-target=\"#primaryNav\"\n                        onClick={() => setIsOpen(!isOpen)}\n                    >\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </div>\n\n                <div id=\"primaryNav\" className={`navbar-menu ${isActive}`}>\n                    <ul className=\"navbar-end\">\n                        <li className=\"navbar-item\">\n                            <Link to=\"/products\">Products</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/products/create\">Create Product</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;\n","import axios from \"axios\";\n\nconst production = \"https://fake-json-products-data.herokuapp.com\";\nconst developement = \"http://localhost:3000\";\n\nexport default axios.create({\n    baseURL: process.env.NODE_ENV === \"development\" ? developement : production,\n});\n","import { createHashHistory } from \"history\";\n\nconst history = createHashHistory();\n\nexport default history;\n","import * as types from \"../constants/actionTypes\";\nimport api from \"../apis\";\n\nimport history from \"../history\";\n\nexport const fetchProducts = () => (dispatch) => {\n    api.get(\"/products\")\n        .then((res) => {\n            dispatch({ type: types.FETCH_PRODUCTS, payload: res.data });\n        })\n        .catch((err) => {\n            dispatch({ type: types.FETCH_PRODUCTS_ERROR, payload: err });\n        });\n};\n\nexport const fetchProduct = (id) => (dispatch) => {\n    api.get(`/products/${id}`)\n        .then((res) => {\n            dispatch({ type: types.FETCH_PRODUCT, payload: res.data });\n        })\n        .catch((err) => {\n            dispatch({ type: types.FETCH_PRODUCT_ERROR, payload: err });\n        });\n};\n\nexport const createProduct = (product) => (dispatch) => {\n    api.post(\"/products\", product)\n        .then((res) => {\n            dispatch({ type: types.CREATE_PRODUCT, payload: res.data });\n            history.push(\"/products\");\n        })\n        .catch((err) => {\n            dispatch({ type: types.CREATE_PRODUCT_ERROR, payload: err });\n        });\n};\n\nexport const updateProduct = (id, product) => (dispatch) => {\n    api.patch(`/products/${id}`, product)\n        .then((res) => {\n            dispatch({ type: types.UPDATE_PRODUCT, payload: res.data });\n            history.push(\"/products\");\n        })\n        .catch((err) => {\n            dispatch({ type: types.UPDATE_PRODUCT_ERROR, payload: err });\n        });\n};\n\nexport const deleteProduct = (id, product) => (dispatch) => {\n    api.delete(`/products/${id}`, product)\n        .then(() => {\n            dispatch({ type: types.DELETE_PRODUCT, payload: id });\n            history.push(\"/products\");\n        })\n        .catch((err) => {\n            dispatch({ type: types.DELETE_PRODUCT_ERROR, payload: err });\n        });\n};\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const FETCH_PRODUCTS_ERROR = \"FETCH_PRODUCTS_ERROR\";\n\nexport const FETCH_PRODUCT = \"FETCH_PRODUCT\";\nexport const FETCH_PRODUCT_ERROR = \"FETCH_PRODUCT_ERROR\";\n\nexport const CREATE_PRODUCT = \"CREATE_PRODUCT\";\nexport const CREATE_PRODUCT_ERROR = \"CREATE_PRODUCT_ERROR\";\n\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\nexport const UPDATE_PRODUCT_ERROR = \"UPDATE_PRODUCT_ERROR\";\n\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const DELETE_PRODUCT_ERROR = \"DELETE_PRODUCT_ERROR\";\n","import React from \"react\";\n\nconst ErrorCard = ({ error }) => {\n    return (\n        <div className=\"container\" style={{ marginTop: \"30px\" }}>\n            <p className=\"notification is-danger\">{error}</p>\n        </div>\n    );\n};\n\nexport default ErrorCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProductItem = ({ product }) => {\n    return (\n        <article className=\"card product-card margin-top-30\">\n            <header className=\"card-header\">\n                <h2 className=\"card-header-title\">{product.title}</h2>\n            </header>\n            <div className=\"card-content\">\n                <p className=\"content\">{product.description}</p>\n                <p className=\"content\">\n                    Price <strong>Rs. {product.price}</strong>\n                </p>\n            </div>\n            <footer className=\"card-footer\">\n                <Link\n                    to={`/products/${product.id}`}\n                    className=\"card-footer-item\"\n                >\n                    Edit\n                </Link>\n                <Link\n                    to={`/products/delete/${product.id}`}\n                    className=\"card-footer-item\"\n                >\n                    Delete\n                </Link>\n            </footer>\n        </article>\n    );\n};\n\nexport default ProductItem;\n","import React from \"react\";\n\nconst Loader = () => {\n    return (\n        <section className=\"hero is-success is-fullheight\">\n            <div className=\"hero-body has-text-centered\">\n                <div className=\"container\">\n                    <progress className=\"progress is-large is-info\" max=\"100\">\n                        60%\n                    </progress>\n                    <h1 className=\"title\">Loading.....</h1>\n                    <h2>Please wait, We will be ready within a moment.</h2>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Loader;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchProducts } from \"../../actions\";\nimport ErrorCard from \"../../components/ErrorCard\";\nimport ProductItem from \"../../components/ProductItem\";\nimport Loader from \"../../components/Loader\";\n\nlet LOADING = true;\n\nconst Products = ({ error, products, fetchProducts }) => {\n    useEffect(() => {\n        fetchProducts();\n        LOADING = false;\n    }, []);\n\n    if (error && error !== null) return <ErrorCard error={error} />;\n    if (LOADING) return <Loader />;\n\n    if (products.length < 1) return <ErrorCard error=\"No items found.\" />;\n\n    return (\n        <main className=\"container\">\n            <section className=\"columns\" style={{ flexWrap: \"wrap\" }}>\n                {renderProducts(products)}\n            </section>\n        </main>\n    );\n};\n\nconst renderProducts = (products) => {\n    return products.map((product) => (\n        <div className=\"column is-4\" key={product.id}>\n            <ProductItem product={product} />\n        </div>\n    ));\n};\n\nconst mapStateToProps = ({ products }) => {\n    return { products };\n};\n\nexport default connect(mapStateToProps, { fetchProducts })(Products);\n","import React from \"react\";\n\nconst ProductHero = ({ title, subtitle }) => {\n    return (\n        <section className=\"hero is-medium is-dark is-bold\">\n            <div className=\"hero-body has-text-centered\">\n                <h1 className=\"title\">{title}</h1>\n                <h2 className=\"subtitle\">{subtitle}</h2>\n            </div>\n        </section>\n    );\n};\n\nexport default ProductHero;\n","import React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\n\nclass ProductForm extends React.Component {\n    renderTextInput = (form) => {\n        const { input, placeholder, meta } = form;\n        return (\n            <div>\n                <input\n                    className={`input has-text-dark has-background-white is-family-monospace ${\n                        meta.error && meta.touched ? \"is-danger\" : \"is-primary\"\n                    }`}\n                    {...input}\n                    placeholder={placeholder}\n                />\n                <p className=\"has-text-danger\">\n                    {meta.error && meta.touched ? meta.error : null}\n                </p>\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <form\n                className=\"container product-create-form\"\n                onSubmit={this.props.handleSubmit(this.props.onFormSubmit)}\n            >\n                <div className=\"field margin-top-30\">\n                    <label className=\"label\">Product Title</label>\n                    <Field\n                        name=\"title\"\n                        component={this.renderTextInput}\n                        placeholder=\"Enter Product Title\"\n                    />\n                </div>\n                <div className=\"field margin-top-30\">\n                    <label className=\"label\">Product Price</label>\n                    <Field\n                        name=\"price\"\n                        component={this.renderTextInput}\n                        placeholder=\"Enter Product Price\"\n                    />\n                </div>\n\n                <div className=\"field margin-top-30\">\n                    <label className=\"label\">Product Description</label>\n                    <Field\n                        name=\"description\"\n                        component={this.renderTextInput}\n                        placeholder=\"Enter Product Description\"\n                    />\n                </div>\n                <button className=\"button is-primary is-fullwidth\">\n                    {this.props.submitTitle || \"Submit\"}\n                </button>\n            </form>\n        );\n    }\n}\n\nconst validate = ({ title, price, description }) => {\n    const errors = {};\n\n    if (!title || title.length < 5)\n        errors.title = \"Title should be more than 5 characters\";\n\n    if (!price || !parseFloat(price))\n        errors.price = \"Price should be a numerical value.\";\n\n    if (price && !parseFloat(price) < 0)\n        errors.price = \"Price cannot be negative.\";\n\n    if (!description || description.length < 5)\n        errors.description = \"Description should be more than 5 characters.\";\n\n    if (description && description.length > 300)\n        errors.description = \"Description should be less than 300 characters.\";\n\n    return errors;\n};\n\nexport default reduxForm({\n    form: \"productCreate\",\n    validate: validate,\n})(ProductForm);\n","import React from \"react\";\n\nimport ProductHero from \"../../components/ProductHero\";\nimport { connect } from \"react-redux\";\nimport ProductForm from \"./ProductForm\";\nimport ErrorCard from \"../../components/ErrorCard\";\nimport { createProduct } from \"../../actions\";\n\nconst ProductCreate = (props) => {\n    if (props.error) return <ErrorCard error={props.error} />;\n\n    return (\n        <main className=\"has-background-light\">\n            <ProductHero\n                title=\"Create new Product\"\n                subtitle=\"This works with great accuracy.\"\n            />\n            <ProductForm\n                onFormSubmit={(product) => props.createProduct(product)}\n                submitTitle=\"Create Product\"\n            />\n        </main>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return { error: state.errors.createProduct };\n};\n\nexport default connect(mapStateToProps, { createProduct })(ProductCreate);\n","import React, { useEffect } from \"react\";\n\nimport ProductHero from \"../../components/ProductHero\";\nimport { connect } from \"react-redux\";\nimport ProductForm from \"./ProductForm\";\nimport ErrorCard from \"../../components/ErrorCard\";\nimport { fetchProduct, updateProduct } from \"../../actions\";\n\nconst ProductUpdate = (props) => {\n    useEffect(() => {\n        props.fetchProduct(props.match.params.id);\n    }, []);\n\n    if (props.error) return <ErrorCard error={props.error} />;\n\n    return (\n        <main className=\"has-background-light\">\n            <ProductHero\n                title=\"Update Product\"\n                subtitle=\"This works with great accuracy.\"\n            />\n            <ProductForm\n                initialValues={props.product}\n                onFormSubmit={(product) =>\n                    props.updateProduct(\n                        parseInt(props.match.params.id),\n                        product\n                    )\n                }\n                submitTitle=\"Update Product\"\n            />\n        </main>\n    );\n};\n\nconst mapStateToProps = ({ errors, products }, { match }) => {\n    const { id } = match.params;\n    if (!parseInt(id))\n        return {\n            error:\n                \"Invalid Product Id Provided. Product Id must be an integer.\",\n        };\n\n    const product = products.filter(\n        (product) => product.id === parseInt(id)\n    )[0];\n\n    if (!product) return { error: \"No product found with provided id.\" };\n\n    if (errors.updateProduct) return { error: errors.updateProduct };\n\n    return { product: product };\n};\n\nexport default connect(mapStateToProps, { updateProduct, fetchProduct })(\n    ProductUpdate\n);\n","import React, { useEffect } from \"react\";\n\nimport ProductHero from \"../../components/ProductHero\";\nimport { connect } from \"react-redux\";\nimport ProductForm from \"./ProductForm\";\nimport ErrorCard from \"../../components/ErrorCard\";\nimport { fetchProduct, deleteProduct } from \"../../actions\";\n\nconst ProductDelete = (props) => {\n    useEffect(() => {\n        props.fetchProduct(props.match.params.id);\n    }, []);\n\n    if (props.error) return <ErrorCard error={props.error} />;\n\n    return (\n        <main className=\"has-background-light\">\n            <ProductHero\n                title=\"Delete Product\"\n                subtitle=\"This works with great accuracy.\"\n            />\n            <ProductForm\n                initialValues={props.product}\n                onFormSubmit={(product) =>\n                    props.deleteProduct(\n                        parseInt(props.match.params.id),\n                        product\n                    )\n                }\n                submitTitle=\"Delete Product\"\n            />\n        </main>\n    );\n};\n\nconst mapStateToProps = (state, { match }) => {\n    const { id } = match.params;\n    if (!parseInt(id))\n        return {\n            error:\n                \"Invalid Product Id Provided. Product Id must be an integer.\",\n        };\n\n    const product = state.products.filter(\n        (product) => product.id === parseInt(id)\n    )[0];\n\n    if (!product) return { error: \"No product found with provided id.\" };\n\n    if (state.errors.deleteProduct)\n        return { error: state.errors.deleteProduct };\n\n    return { product: product };\n};\n\nexport default connect(mapStateToProps, { deleteProduct, fetchProduct })(\n    ProductDelete\n);\n","import React from \"react\";\n\nimport { Switch, Route, Router } from \"react-router-dom\";\nimport Header from \"./components/Header\";\n\nimport Products from \"./pages/products/Products\";\nimport ProductCreate from \"./pages/products/ProductCreate\";\nimport history from \"./history\";\nimport ProductUpdate from \"./pages/products/ProductUpdate\";\nimport ProductDelete from \"./pages/products/ProductDelete\";\n\nconst Routers = () => {\n    return (\n        <Router history={history}>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\" component={Products} />\n                <Route exact path=\"/products\" component={Products} />\n\n                <Route\n                    exact\n                    path=\"/products/create\"\n                    component={ProductCreate}\n                />\n                <Route exact path=\"/products/:id\" component={ProductUpdate} />\n                <Route\n                    exact\n                    path=\"/products/delete/:id\"\n                    component={ProductDelete}\n                />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Routers;\n","import * as types from \"../constants/actionTypes\";\n\nconst INITIAL_STATE = {\n    fetchProducts: null,\n    fetchProduct: null,\n    createProduct: null,\n    deleteProduct: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case types.FETCH_PRODUCTS_ERROR:\n            return { ...state, fetchProducts: action.payload };\n        case types.FETCH_PRODUCT_ERROR:\n            return { ...state, fetchProduct: action.payload };\n        case types.CREATE_PRODUCT_ERROR:\n            return { ...state, createProduct: action.payload };\n        case types.DELETE_PRODUCT_ERROR:\n            return { ...state, deleteProduct: action.payload };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport productsReducer from \"./productsReducer\";\nimport { reducer as formReducer } from \"redux-form\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n    products: productsReducer,\n    form: formReducer,\n    errors: errorReducer,\n});\n","import * as types from \"../constants/actionTypes\";\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case types.FETCH_PRODUCTS:\n            return action.payload;\n        case types.FETCH_PRODUCT:\n            return [...state, action.payload];\n        case types.CREATE_PRODUCT:\n            return [...state, action.payload];\n        case types.DELETE_PRODUCT:\n            return state.filter((product) => product.id !== action.payload);\n        default:\n            return state;\n    }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Router from \"./Router\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router />\n    </Provider>,\n    document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}